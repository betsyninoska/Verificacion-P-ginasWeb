name: Verificacion Diaria de Sitios Web

on:
  schedule:
    # CRON: 30 11 * * * es 11:30 AM UTC, que es 7:30 AM en UTC-4 (ej: Venezuela)
    - cron: '30 11 * * *' 
  workflow_dispatch:

jobs:
  check-websites:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del Repositorio
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x' 

      - name: Ejecutar y Preparar Reporte para Telegram
        id: generate_report
        run: |
          # 1. Ejecuta el script de verificaciÃ³n y guarda TODA la salida en full_report.txt
          python verificar_webs.py > full_report.txt
          
          # 2. Prepara el mensaje para Telegram (LÃ­mite de caracteres)
          # Se toman las primeras 15 lÃ­neas del reporte.
          # Se usa 'sed' para reemplazar saltos de lÃ­nea (\n) por %0A (URL encoding para newline).
          # Esto asegura que el mensaje se muestre bien formateado en Telegram.
          TELEGRAM_MESSAGE=$(cat full_report.txt | head -n 15 | sed 's/"/\\"/g' | sed ':a;N;$!ba;s/\n/%0A/g')
          
          # 3. Hace que la variable estÃ© disponible para el siguiente paso
          echo "TELEGRAM_MESSAGE=$TELEGRAM_MESSAGE" >> $GITHUB_ENV
          
          # 4. Imprime el reporte completo en los logs de GitHub
          cat full_report.txt

      - name: Enviar NotificaciÃ³n a Telegram ðŸ’¬
        run: |
          echo "Enviando reporte a Telegram..."
          
          # Llama a la API de sendMessage de Telegram usando cURL.
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
          -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
          -d text="*Reporte de Sitios Web (7:30 AM)*%0A%0A${{ env.TELEGRAM_MESSAGE }}" \
          -d parse_mode=Markdown # Usa Markdown para que el tÃ­tulo salga en negritas